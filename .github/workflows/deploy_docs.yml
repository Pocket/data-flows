# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["feature/docs"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
    run:
        working-directory: ./data-products

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: "actions/setup-python@v4"
        with:
          python-version: "3.10"
      - name: Install Poetry
        run: "curl -sSL https://install.python-poetry.org | python3 -"
      - name: Update Path
        run : echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: Set .venv Config
        run : poetry config virtualenvs.in-project true
      - name: Install Deps
        run: "../common-utils/common_utils_build.sh && poetry install --with-only main,docs --no-root --no-ansi"
      - name: Build Docs
        run: "poetry run mkdocs build"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: 'docs/site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2