[tool.poetry]
name = "data-products"
version = "0.9.0"

description = "Main project folder for data products prefect flows"
authors = ["Braun <breyes@mozilla.com>"]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "<2"
prefect = "^2.8.6"
prefect-dask = "^0.2.3"
snowflake-connector-python = "^3.0.0"
prefect-snowflake = "^0.26.1"
prefect-gcp = {extras = ["bigquery"], version = "^0.4.2"}
jinja2 = "^3.1.2"
prefect-sqlalchemy = "^0.2.4"
mysqlclient = "^2.2.0"
pandas = "^2.0.3"
db-dtypes = "^1.1.1"
aioboto3 = "^11.2.0"
prefect-aws = {git = "https://github.com/Pocket/prefect-aws.git", rev = "test-prs"}
html2text = "^2020.1.16"
oscrypto = {git = "https://github.com/wbond/oscrypto.git", rev = "d5f3437ed24257895ae1edd9e503cfb352e635a8"} # https://github.com/DataDog/datadog-agent/pull/19899/files
common-utils = {path = "../common-utils", develop = true}


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pytest-coverage = "^0.0"
black = "^23.1.0"
pip = "^23.1.2"
install = "^1.3.5"
pytest-asyncio = "^0.21.0"
pytest-env = "^0.8.1"
ruff = "^0.0.280"
bokeh = ">=2.4.2,<3"
moto = {extras = ["s3"], version = "^4.2.5"}


[tool.poetry.group.docs.dependencies]
pip = "^23.1.2"
install = "^1.3.5"
mkdocs-material = "^9.1.17"
mkdocstrings-python = "^1.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.prefect.envs.base]
python_version = "3.10"
dockerfile_path=".docker/base/Dockerfile"

[tool.prefect.docker.base]
python_version = "3.10"
dockerfile_path=".docker/worker/base/Dockerfile"

[tool.pytest.ini_options]
pythonpath = "src"
env = [
    'R:DF_CONFIG_SNOWFLAKE_CREDENTIALS={"role": "test", "account": "test.us-test-1", "user": "test@mozilla.com", "private_key_passphrase": "test", "private_key_path": "tmp/test.p8"}',
    'DF_CONFIG_SNOWFLAKE_SCHEMA=test',
    'DF_CONFIG_SNOWFLAKE_WAREHOUSE=prefect_wh_test',
    'R:DF_CONFIG_GCP_CREDENTIALS={"service_account_file": "tests/test.json"}',
    'R:DF_CONFIG_SNOWFLAKE_GCP_STAGE_DATA={"default_name": "DEVELOPMENT.TEST.PREFECT_GCS_STAGE_PARQ_DEV","default_location": "gs://test", "gcs_pocket_shared_name": "DEVELOPMENT.TEST.PREFECT_GCS_STAGE_PARQ_SHARED","gcs_pocket_shared_location": "gs://test"}',
    'D:DF_CONFIG_SQL_TEMPLATE_PATH=tests/sql_etl/unit/sql', # only sets if not already set https://github.com/pytest-dev/pytest-env#only-set-if-not-already-set
    'ARTICLES_MAX_PER_RUN=25',
    'PREFECT_LOGGING_LEVEL=ERROR', # reduce verbosity of logging
    'DASK_DISTRIBUTED__LOGGING__DISTRIBUTED=ERROR', # reduce verbosity of logging
    'NEW_TAB_REC_DATASET=braun',
]
